# Installation {.unnumbered}

Das Kommandozeilen-Tool `pica` lässt sich unter den Betriebssystemen
Linux, macOS und Windows nutzen. Folgend wird die Installation sowie
Einrichtung und Konfiguration des Tools beschrieben. Die Zeichenkette
`X.Y.Z` ist ein Platzhalter für eine konkrete *pica-rs* Version und
muss in dem Befehl entsprechend ersetzt werden.

## Installation unter Linux

Für das Betriebssystem Linux stehen vorgefertigte [Releases] stehen auf der
Plattform GitHub zum Download bereit.

Das `tar`-Archiv enthält neben dem Tool `pica` auch weitere Dateien
wie bspw. Shell-Skripte zur Befehlszeilenergänzung:

```{.bash}
$ tar -tf
pica-X.Y.Z-x86_64-unknown-linux-gnu.tar.gz
pica-X.Y.Z-x86_64-unknown-linux-gnu/
pica-X.Y.Z-x86_64-unknown-linux-gnu/pica
pica-X.Y.Z-x86_64-unknown-linux-gnu/README.md
pica-X.Y.Z-x86_64-unknown-linux-gnu/completion/pica.zsh
pica-X.Y.Z-x86_64-unknown-linux-gnu/LICENSE
pica-X.Y.Z-x86_64-unknown-linux-gnu/completion/pica.fish
pica-X.Y.Z-x86_64-unknown-linux-gnu/completion/_pica
```

Eine systemweite Installation von `pica` in das Verzeichnis
`/usr/local/bin` kann mit dem `install` erfolgen. Hierfür sind
ggf. *root*-Rechte nötig:

```{.bash}
$ tar xfz pica-X.Y.Z-x86_64-unknown-linux-gnu.tar.gz
$ sudo install -m755 pica-X.Y.Z-x86_64-unknown-linux-gnu/pica \
      /usr/local/bin/pica
```

## Installation unter macOS

Unter macOS wird nur die Zielarchitektur `x86_64-apple-darwin` (macOS
10.7+, Lion+) unterstützt. Diese lässt sich analog wie unter Linux
installieren:

```{.bash}
$ tar xfz pica-X.Y.Z-x86_64-apple-darwin.tar.gz
$ install -m755  pica-X.Y.Z-x86_64-apple-darwin/pica /usr/local/bin/pica
```

## Installation unter Windows

Unter Windows kann das Programm direkt dem `zip`-Archiv `x86_64-pc-windows-msvc`
entnommen werden. Nach einem Wechsel in das Verzeichnis, in dem sich die
`pica.exe` befindet, kann das Programm direkt genutzt werden. Soll `pica`
aus jedem beliebigen Verzeichnis heraus aufrufbar sein, dann muss der
Installationspfad in der `PATH`-Umgebungsvariable mit aufgelistet werden.


## Aus dem Quellcode installieren

Das Projekt lässt sich auch direkt aus den Quellen kompilieren. Hierfür
wird eine aktuelle Rust-Version (>= 1.85) mit dem Paketmanager `cargo`
benötigt.

Der aktuelle Entwicklungsstand lässt sich wie folgt installieren:

```{.bash}
$ git clone https://github.com/deutsche-nationalbibliothek/pica-rs.git
$ cd pica-rs
$ cargo build --release
```

Das fertige `pica`-Programm liegt im Verzeichnis `target/release/` und
kann bspw. in das Verzeichnis `/usr/local/bin` installiert werden:

```{.bash}
$ install -m755 target/release/pica /usr/local/bin/pica
```

Wenn der Quellcode nicht benötigt wird, kann das Projekt auch direkt
über den Paketmanager `cargo` installiert werden:

```{.bash}
$ # Installation der aktuellen Entwicklungsversion
$ cargo install --git https://github.com/deutsche-nationalbibliothek/pica-rs \
     --branch main pica-cli

$ # Installation der Version X.Y.Z
$ cargo install --git https://github.com/deutsche-nationalbibliothek/pica-rs \
      --tag vX.Y.Z pica-cli
```

Das fertige Programm befindet sich dann unter `~/.cargo/bin/pica`.

### Features

Wird das Programm anhand der Quellen gebaut, können optionale Features
aktiviert werden.Die folgenden Funktionen können mit der
`cargo`-Option `--features` aktiviert werden:

- `unstable`, um die neuesten Funktionalitäten, die noch in der
  Entwicklung sind und für eine der nächsten Versionen vorgesehen sind,
  zu aktivieren
- `nightly`, um weitere Optimierungen zu aktivieren (benötigt Rust
  `nightly`)
- und `compat`, um eine höhere Kompatibilität mit der Abfragesprache
  [PICA Path] zu erhalten.
  
[Releases]: https://github.com/deutsche-nationalbibliothek/pica-rs/releases
[CentOS Linux]: https://www.centos.org
[Debian GNU/Linux]: https://www.debian.org
[Red Hat Linux]: https://www.redhat.com
[SUSE Linux]: https:://www.suse.com
[Ubuntu Linux]: https://ubuntu.com
[PICA Path]: https://format.gbv.de/query/picapath
