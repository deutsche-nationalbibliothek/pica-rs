name: CI

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths-ignore:
      - '**/README.md'
  push:
    branches:
      - main

defaults:
  run:
    shell: bash

env:
  CACHE_KEY: Linux-cargo-nightly-x86_64-unknown-linux-gnu

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: abbbi/github-actions-tune@v1
      - uses: actions/cache@v2
        with:
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/Cargo.toml') }}
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: x86_64-unknown-linux-gnu
          profile: minimal
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace

  test:
    name: test ${{ matrix.target.triple }} (${{ matrix.target.toolchain }})
    needs: check
    strategy:
      matrix:
        target:
          - { os: ubuntu-latest, toolchain: stable, triple: x86_64-unknown-linux-gnu }
          - { os: ubuntu-latest, toolchain: beta, triple: x86_64-unknown-linux-gnu }
          - { os: ubuntu-latest, toolchain: nightly, triple: x86_64-unknown-linux-gnu }
          - { os: macos-latest, toolchain: stable, triple: x86_64-apple-darwin }
          - { os: macos-latest, toolchain: beta, triple: x86_64-apple-darwin }
          - { os: macos-latest, toolchain: nightly, triple: x86_64-apple-darwin }
          - { os: windows-latest, toolchain: stable, triple: x86_64-pc-windows-gnu }
          - { os: windows-latest, toolchain: stable, triple: i686-pc-windows-msvc }
    runs-on: ${{ matrix.target.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: abbbi/github-actions-tune@v1
        if: ${{ matrix.target.os == 'ubuntu-latest' }}
      - uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-cargo-${{ matrix.target.toolchain }}-${{ matrix.target.triple }}-${{ hashFiles('**/Cargo.toml') }}
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.target.toolchain }}
          target: ${{ matrix.target.triple }}
          profile: minimal
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --all-features --no-fail-fast

  cross:
    needs: check
    name: cross ${{ matrix.target.triple }} (${{ matrix.target.toolchain }})
    runs-on: ${{ matrix.target.os }}
    strategy:
      matrix:
        target:
          - { os: ubuntu-latest, toolchain: stable, triple: x86_64-unknown-linux-gnu }
          - { os: ubuntu-latest, toolchain: beta, triple: x86_64-unknown-linux-gnu }
          - { os: ubuntu-latest, toolchain: nightly, triple: x86_64-unknown-linux-gnu }
          - { os: ubuntu-latest, toolchain: stable, triple: x86_64-unknown-linux-musl }
          - { os: ubuntu-latest, toolchain: stable, triple: aarch64-unknown-linux-gnu }
          - { os: ubuntu-latest, toolchain: stable, triple: aarch64-unknown-linux-musl }
    steps:
      - uses: actions/checkout@v3
      - uses: abbbi/github-actions-tune@v1
        if: ${{ matrix.target.os == 'ubuntu-latest' }}
      - uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-cargo-cross-${{ matrix.target.toolchain }}-${{ matrix.target.triple }}-${{ hashFiles('**/Cargo.toml') }}
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.target.toolchain }}
          target: ${{ matrix.target.triple }}
          profile: minimal
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --workspace --all-features

  rustfmt:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - uses: abbbi/github-actions-tune@v1
      - uses: actions/cache@v2
        with:
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/Cargo.toml') }}
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - uses: abbbi/github-actions-tune@v1
      - uses: actions/cache@v2
        with:
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/Cargo.toml') }}
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  udeps:
    if: ${{ github.event.pull_request.draft == false }}
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - uses: abbbi/github-actions-tune@v1
      - uses: actions/cache@v2
        with:
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/Cargo.toml') }}
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - uses: actions-rs/install@v0.1
        with:
          crate: cargo-udeps
          version: latest
      - uses: actions-rs/cargo@v1
        with:
          command: udeps
          args: --workspace

  audit:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - uses: abbbi/github-actions-tune@v1
      - uses: actions/cache@v2
        with:
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/Cargo.toml') }}
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  upgrades:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - uses: abbbi/github-actions-tune@v1
      - uses: actions/cache@v2
        with:
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/Cargo.toml') }}
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - uses: actions-rs/install@v0.1
        with:
          crate: cargo-upgrades
          version: latest
      - run: |
          cargo upgrades
