name: CI

on:
  pull_request:
    types:
      - opened
      - synchronize
      - ready_for_review
      - reopened
    paths-ignore:
      - '**/CHANGELOG.md'
      - '**/README.md'
  push:
    branches:
      - main

defaults:
  run:
    shell: bash

env:
  CARGO_INCREMENTAL: 0
  CACHE_KEY: Linux-cargo-nightly-x86_64-unknown-linux-gnu
  RUSTFLAGS: -D warnings -W unreachable-pub -W rust-2021-compatibility
  RUSTUP_MAX_RETRIES: 10

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: abbbi/github-actions-tune@v1
      - uses: actions/cache@v3
        with:
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/Cargo.toml') }}
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
      - uses: dtolnay/rust-toolchain@nightly
      - run: |
          make check

  test:
    name: test ${{ matrix.target.triple }} (${{ matrix.target.toolchain }})
    needs: check
    strategy:
      matrix:
        target:
          - { os: ubuntu-latest, toolchain: stable, triple: x86_64-unknown-linux-gnu }
          - { os: ubuntu-latest, toolchain: beta, triple: x86_64-unknown-linux-gnu }
          - { os: ubuntu-latest, toolchain: nightly, triple: x86_64-unknown-linux-gnu }
          - { os: macos-latest, toolchain: stable, triple: x86_64-apple-darwin }
          - { os: macos-latest, toolchain: beta, triple: x86_64-apple-darwin }
          - { os: macos-latest, toolchain: nightly, triple: x86_64-apple-darwin }
          - { os: windows-latest, toolchain: stable, triple: x86_64-pc-windows-gnu }
          - { os: windows-latest, toolchain: stable, triple: i686-pc-windows-msvc }
    runs-on: ${{ matrix.target.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: abbbi/github-actions-tune@v1
        if: ${{ matrix.target.os == 'ubuntu-latest' }}
      - uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-cargo-${{ matrix.target.toolchain }}-${{ matrix.target.triple }}-${{ hashFiles('**/Cargo.toml') }}
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.target.toolchain }}
          targets: ${{ matrix.target.triple }}
      - name: "Run prepare tests"
        run: ci/prepare-tests.sh
      - run: |
          make test

  cross:
    if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}
    name: cross ${{ matrix.target.triple }} (${{ matrix.target.toolchain }})
    runs-on: ${{ matrix.target.os }}
    needs: check
    strategy:
      matrix:
        target:
          - { os: ubuntu-latest, toolchain: stable, triple: x86_64-unknown-linux-gnu }
          - { os: ubuntu-latest, toolchain: beta, triple: x86_64-unknown-linux-gnu }
          - { os: ubuntu-latest, toolchain: nightly, triple: x86_64-unknown-linux-gnu }
          - { os: ubuntu-latest, toolchain: stable, triple: x86_64-unknown-linux-musl }
          - { os: ubuntu-latest, toolchain: stable, triple: aarch64-unknown-linux-gnu }
          - { os: ubuntu-latest, toolchain: stable, triple: aarch64-unknown-linux-musl }
    steps:
      - uses: actions/checkout@v4
      - uses: abbbi/github-actions-tune@v1
        if: ${{ matrix.target.os == 'ubuntu-latest' }}
      - uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-cargo-cross-${{ matrix.target.toolchain }}-${{ matrix.target.triple }}-${{ hashFiles('**/Cargo.toml') }}
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.target.toolchain }}
          targets: ${{ matrix.target.triple }}
      - name: "Install cross"
        run: cargo install -f cross
      - run: |
          cross build --target ${{ matrix.target.triple }}

  fuzz:
    if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}
    name: fuzz ${{ matrix.item.name }}
    runs-on: ubuntu-latest
    needs: check
    strategy:
      matrix:
        item:
          - { name: record_ref, fuzz-dir: crates/pica-record/fuzz, target: fuzz-record-ref, max-total-time: 300 }
          # - { name: select_query, fuzz-dir: crates/pica-select/fuzz, target: fuzz_query, max-total-time: 300 }
    steps:
      - uses: actions/checkout@v4
      - uses: abbbi/github-actions-tune@v1
      - uses: actions/cache@v3
        with:
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/Cargo.toml') }}
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
      - uses: dtolnay/rust-toolchain@nightly
      - name: "Install cargo-fuzz"
        run: |
          cargo install -f cargo-fuzz
      - run: |
          cargo fuzz run --fuzz-dir ${{ matrix.item.fuzz-dir }} --jobs 2 ${{ matrix.item.target }} -- -max_total_time=${{ matrix.item.max-total-time }}

  fmt:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: abbbi/github-actions-tune@v1
      - uses: actions/cache@v3
        with:
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/Cargo.toml') }}
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - run: |
          cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: abbbi/github-actions-tune@v1
      - uses: actions/cache@v3
        with:
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/Cargo.toml') }}
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy
      - run: |
          make clippy

  # udeps:
  #   if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}
  #   runs-on: ubuntu-latest
  #   needs: test
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: abbbi/github-actions-tune@v1
  #     - uses: actions/cache@v3
  #       with:
  #         key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/Cargo.toml') }}
  #         path: |
  #           ~/.cargo/bin/
  #           ~/.cargo/git/db/
  #           ~/.cargo/registry/cache/
  #           ~/.cargo/registry/index/
  #           target/
  #     - uses: dtolnay/rust-toolchain@nightly
  #     - name: "Install `cargo-udeps`"
  #       run: |
  #         cargo install -f cargo-udeps
  #     - run: |
  #         cargo udeps --workspace

  audit:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: abbbi/github-actions-tune@v1
      - uses: actions/cache@v3
        with:
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/Cargo.toml') }}
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
      - uses: dtolnay/rust-toolchain@nightly
      - uses: rustsec/audit-check@v1.4.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  upgrades:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: abbbi/github-actions-tune@v1
      - uses: actions/cache@v3
        with:
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/Cargo.toml') }}
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
      - uses: dtolnay/rust-toolchain@nightly
      - name: "Install `cargo-upgrades`"
        run: |
          cargo install -f cargo-upgrades
      - run: |
          cargo upgrades

  deny:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: abbbi/github-actions-tune@v1
      - uses: actions/cache@v3
        with:
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/Cargo.toml') }}
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
      - uses: dtolnay/rust-toolchain@nightly
      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          log-level: warn
          command: check
          arguments: --workspace

  miri:
    name: miri
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@miri
    - run: cargo miri test --workspace --lib --verbose
      env:
        MIRIFLAGS: -Zmiri-strict-provenance
    - run: cargo miri test --workspace --doc --verbose
      env:
        MIRIFLAGS: -Zmiri-strict-provenance

  book:
    if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: abbbi/github-actions-tune@v1
      - uses: actions/cache@v3
        with:
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/Cargo.toml') }}
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
      - uses: dtolnay/rust-toolchain@nightly
      - name: "Install `mdbook`"
        run: |
          cargo install -f mdbook
      - run: |
          mdbook build docs/book
          mdbook test docs/book

  gh-pages:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - audit
      - book
      - check
      - clippy
      - cross
      - deny
      - fmt
      - fuzz
      - miri
      - test
      # - udeps
      - upgrades
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: abbbi/github-actions-tune@v1
      - uses: actions/cache@v3
        with:
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/Cargo.toml') }}
          path: |
            ~/.cargo/bin/
            ~/.cargo/git/db/
            ~/.cargo/registry/cache/
            ~/.cargo/registry/index/
            target/
      - uses: dtolnay/rust-toolchain@nightly
      - name: "Install `mdbook`"
        run: |
          cargo install -f mdbook
      - run: |
          mkdir -p target/docs
          cargo doc --all --no-deps --workspace --target-dir target/docs/api
          mdbook build docs/book --dest-dir ../../target/docs/book
          echo '<meta http-equiv="refresh" content="0; url=doc/pica/index.html"><a href=doc/pica/index.html">Redirect</a>' >> target/docs/api/index.html
          echo '<meta http-equiv="refresh" content="0; url=book/index.html"><a href=book/index.html">Redirect</a>' >> target/docs/index.html
      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: target/docs
          keep_files: false
          force_orphan: true
